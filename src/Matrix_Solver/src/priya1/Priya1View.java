/*
 * Priya1View.java
 */

package priya1;

import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;

/**
 * The application's main frame.
 */
public class Priya1View extends FrameView {

    public Priya1View(SingleFrameApplication app) {
        super(app);

        initComponents();
        aaa.setVisible(true);
aaa.setText("SELECT A FUNCTION");
        aa.setVisible(true);
aa.setText("TOP:-------BOTTOM:-------");
// TODO add your handling code here:
p1.setVisible(false);
p2.setVisible(false);
sign.setVisible(false);
p3.setVisible(false);
p4.setVisible(false);
p5.setVisible(false);
p4l1.setVisible(false);
p4l2.setVisible(false);
size.setSelectedIndex(0);
        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                statusMessageLabel.setText("");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
                statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        statusAnimationLabel.setIcon(idleIcon);
        progressBar.setVisible(false);

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
                        statusAnimationLabel.setIcon(busyIcons[0]);
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(true);
                } else if ("done".equals(propertyName)) {
                    busyIconTimer.stop();
                    statusAnimationLabel.setIcon(idleIcon);
                    progressBar.setVisible(false);
                    progressBar.setValue(0);
                } else if ("message".equals(propertyName)) {
                    String text = (String)(evt.getNewValue());
                    statusMessageLabel.setText((text == null) ? "" : text);
                    messageTimer.restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer)(evt.getNewValue());
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(false);
                    progressBar.setValue(value);
                }
            }
        });
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = Priya1App.getApplication().getMainFrame();
            aboutBox = new Priya1AboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        Priya1App.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        p1 = new javax.swing.JPanel();
        p1l1 = new javax.swing.JLabel();
        p1a1 = new javax.swing.JTextField();
        p1b1 = new javax.swing.JTextField();
        p1c1 = new javax.swing.JTextField();
        p1a2 = new javax.swing.JTextField();
        p1b2 = new javax.swing.JTextField();
        p1c2 = new javax.swing.JTextField();
        p1c3 = new javax.swing.JTextField();
        p1b3 = new javax.swing.JTextField();
        p1a3 = new javax.swing.JTextField();
        p1a11 = new javax.swing.JTextField();
        p1b11 = new javax.swing.JTextField();
        p1c11 = new javax.swing.JTextField();
        p1c22 = new javax.swing.JTextField();
        p1b22 = new javax.swing.JTextField();
        p1a22 = new javax.swing.JTextField();
        p1a33 = new javax.swing.JTextField();
        p1b33 = new javax.swing.JTextField();
        p1c33 = new javax.swing.JTextField();
        p1l2 = new javax.swing.JLabel();
        p1done = new javax.swing.JButton();
        p1back = new javax.swing.JButton();
        p1sign = new javax.swing.JLabel();
        p1reset = new javax.swing.JButton();
        p1l = new javax.swing.JLabel();
        l1 = new javax.swing.JLabel();
        l2 = new javax.swing.JLabel();
        b1 = new javax.swing.JButton();
        b3 = new javax.swing.JButton();
        b2 = new javax.swing.JButton();
        b4 = new javax.swing.JButton();
        p2 = new javax.swing.JPanel();
        p2l1 = new javax.swing.JLabel();
        p2back = new javax.swing.JButton();
        p2exit = new javax.swing.JButton();
        p2a1 = new javax.swing.JLabel();
        p2b1 = new javax.swing.JLabel();
        p2c1 = new javax.swing.JLabel();
        p2a2 = new javax.swing.JLabel();
        p2b2 = new javax.swing.JLabel();
        p2c2 = new javax.swing.JLabel();
        p2c3 = new javax.swing.JLabel();
        p2b3 = new javax.swing.JLabel();
        p2a3 = new javax.swing.JLabel();
        p3 = new javax.swing.JPanel();
        p3a1 = new javax.swing.JTextField();
        p3b1 = new javax.swing.JTextField();
        p3c1 = new javax.swing.JTextField();
        p3a2 = new javax.swing.JTextField();
        p3b2 = new javax.swing.JTextField();
        p3c2 = new javax.swing.JTextField();
        p3c3 = new javax.swing.JTextField();
        p3b3 = new javax.swing.JTextField();
        p3a3 = new javax.swing.JTextField();
        p3done = new javax.swing.JButton();
        p3back = new javax.swing.JButton();
        p3reset = new javax.swing.JButton();
        p3l1 = new javax.swing.JLabel();
        b5 = new javax.swing.JButton();
        p4 = new javax.swing.JPanel();
        p4back = new javax.swing.JButton();
        p4exit = new javax.swing.JButton();
        p4l1 = new javax.swing.JLabel();
        p4l2 = new javax.swing.JLabel();
        p4ans = new javax.swing.JLabel();
        b6 = new javax.swing.JButton();
        aaa = new javax.swing.JLabel();
        aa = new javax.swing.JLabel();
        p5 = new javax.swing.JPanel();
        p5l1 = new javax.swing.JLabel();
        p5back = new javax.swing.JButton();
        p5exit = new javax.swing.JButton();
        p5a1 = new javax.swing.JLabel();
        p5b1 = new javax.swing.JLabel();
        p5c1 = new javax.swing.JLabel();
        p5a2 = new javax.swing.JLabel();
        p5b2 = new javax.swing.JLabel();
        p5c2 = new javax.swing.JLabel();
        p5c3 = new javax.swing.JLabel();
        p5b3 = new javax.swing.JLabel();
        p5a3 = new javax.swing.JLabel();
        sign = new javax.swing.JLabel();
        size = new javax.swing.JComboBox();
        inverse = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        statusPanel = new javax.swing.JPanel();
        javax.swing.JSeparator statusPanelSeparator = new javax.swing.JSeparator();
        statusMessageLabel = new javax.swing.JLabel();
        statusAnimationLabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(priya1.Priya1App.class).getContext().getResourceMap(Priya1View.class);
        mainPanel.setBackground(resourceMap.getColor("mainPanel.background")); // NOI18N
        mainPanel.setBorder(new javax.swing.border.MatteBorder(null));
        mainPanel.setName("mainPanel"); // NOI18N

        p1.setBackground(resourceMap.getColor("p1.background")); // NOI18N
        p1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        p1.setName("p1"); // NOI18N

        p1l1.setText(resourceMap.getString("p1l1.text")); // NOI18N
        p1l1.setName("p1l1"); // NOI18N

        p1a1.setText(resourceMap.getString("p1a1.text")); // NOI18N
        p1a1.setName("p1a1"); // NOI18N
        p1a1.setNextFocusableComponent(p1a2);

        p1b1.setName("p1b1"); // NOI18N
        p1b1.setNextFocusableComponent(p1b2);

        p1c1.setName("p1c1"); // NOI18N

        p1a2.setName("p1a2"); // NOI18N
        p1a2.setNextFocusableComponent(p1a3);

        p1b2.setName("p1b2"); // NOI18N

        p1c2.setName("p1c2"); // NOI18N

        p1c3.setName("p1c3"); // NOI18N
        p1c3.setNextFocusableComponent(p1a11);

        p1b3.setName("p1b3"); // NOI18N
        p1b3.setNextFocusableComponent(p1c1);

        p1a3.setName("p1a3"); // NOI18N
        p1a3.setNextFocusableComponent(p1b1);

        p1a11.setName("p1a11"); // NOI18N
        p1a11.setNextFocusableComponent(p1a22);

        p1b11.setName("p1b11"); // NOI18N
        p1b11.setNextFocusableComponent(p1b22);

        p1c11.setName("p1c11"); // NOI18N
        p1c11.setNextFocusableComponent(p1c22);

        p1c22.setName("p1c22"); // NOI18N
        p1c22.setNextFocusableComponent(p1c33);

        p1b22.setName("p1b22"); // NOI18N
        p1b22.setNextFocusableComponent(p1b33);

        p1a22.setName("p1a22"); // NOI18N
        p1a22.setNextFocusableComponent(p1a33);

        p1a33.setName("p1a33"); // NOI18N
        p1a33.setNextFocusableComponent(p1b11);

        p1b33.setName("p1b33"); // NOI18N
        p1b33.setNextFocusableComponent(p1c11);

        p1c33.setName("p1c33"); // NOI18N

        p1l2.setText(resourceMap.getString("p1l2.text")); // NOI18N
        p1l2.setName("p1l2"); // NOI18N

        p1done.setText(resourceMap.getString("p1done.text")); // NOI18N
        p1done.setName("p1done"); // NOI18N
        p1done.setNextFocusableComponent(p1reset);
        p1done.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p1doneMouseClicked(evt);
            }
        });

        p1back.setText(resourceMap.getString("p1back.text")); // NOI18N
        p1back.setName("p1back"); // NOI18N
        p1back.setNextFocusableComponent(p1a1);
        p1back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p1backMouseClicked(evt);
            }
        });

        p1sign.setText(resourceMap.getString("p1sign.text")); // NOI18N
        p1sign.setName("p1sign"); // NOI18N

        p1reset.setText(resourceMap.getString("p1reset.text")); // NOI18N
        p1reset.setName("p1reset"); // NOI18N
        p1reset.setNextFocusableComponent(p1back);
        p1reset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p1resetMouseClicked(evt);
            }
        });

        p1l.setText(resourceMap.getString("p1l.text")); // NOI18N
        p1l.setName("p1l"); // NOI18N

        javax.swing.GroupLayout p1Layout = new javax.swing.GroupLayout(p1);
        p1.setLayout(p1Layout);
        p1Layout.setHorizontalGroup(
            p1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p1Layout.createSequentialGroup()
                .addGroup(p1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(p1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(p1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(p1a1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p1b1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p1c1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(p1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(p1a2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p1b2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p1c2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(p1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(p1a3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p1b3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p1c3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(p1sign)
                        .addGap(18, 18, 18)
                        .addGroup(p1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(p1Layout.createSequentialGroup()
                                .addComponent(p1b11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(p1b22, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(p1b33, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(p1Layout.createSequentialGroup()
                                .addComponent(p1a11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(p1a22, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(p1a33, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(p1l2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(p1Layout.createSequentialGroup()
                                .addComponent(p1c11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(p1c22, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(p1c33, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(p1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(p1l1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(p1Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(p1l, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(p1Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(p1done)
                        .addGap(18, 18, 18)
                        .addComponent(p1reset)
                        .addGap(18, 18, 18)
                        .addComponent(p1back)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        p1Layout.setVerticalGroup(
            p1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p1Layout.createSequentialGroup()
                .addGroup(p1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(p1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(p1l, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addGroup(p1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(p1l1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p1l2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(p1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(p1a1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p1a2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p1a3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p1a11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p1a22, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p1a33, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(p1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(p1b1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p1b2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p1b3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p1b11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p1b22, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p1b33, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(p1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(p1c1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p1c2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p1c3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p1c11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p1c22, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p1c33, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(p1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(p1done)
                            .addComponent(p1reset)
                            .addComponent(p1back)))
                    .addGroup(p1Layout.createSequentialGroup()
                        .addGap(187, 187, 187)
                        .addComponent(p1sign, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        l1.setFont(resourceMap.getFont("l1.font")); // NOI18N
        l1.setText(resourceMap.getString("l1.text")); // NOI18N
        l1.setName("l1"); // NOI18N

        l2.setText(resourceMap.getString("l2.text")); // NOI18N
        l2.setName("l2"); // NOI18N

        b1.setText(resourceMap.getString("b1.text")); // NOI18N
        b1.setName("b1"); // NOI18N
        b1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b1MouseClicked(evt);
            }
        });
        b1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                b1MouseMoved(evt);
            }
        });
        b1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                b1KeyPressed(evt);
            }
        });

        b3.setText(resourceMap.getString("b3.text")); // NOI18N
        b3.setName("b3"); // NOI18N
        b3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b3MouseClicked(evt);
            }
        });
        b3.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                b3MouseMoved(evt);
            }
        });

        b2.setText(resourceMap.getString("b2.text")); // NOI18N
        b2.setName("b2"); // NOI18N
        b2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b2MouseClicked(evt);
            }
        });
        b2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                b2MouseMoved(evt);
            }
        });

        b4.setText(resourceMap.getString("b4.text")); // NOI18N
        b4.setName("b4"); // NOI18N
        b4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b4MouseClicked(evt);
            }
        });
        b4.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                b4MouseMoved(evt);
            }
        });

        p2.setBackground(resourceMap.getColor("p2.background")); // NOI18N
        p2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        p2.setFocusable(false);
        p2.setName("p2"); // NOI18N

        p2l1.setText(resourceMap.getString("p2l1.text")); // NOI18N
        p2l1.setName("p2l1"); // NOI18N

        p2back.setText(resourceMap.getString("p2back.text")); // NOI18N
        p2back.setName("p2back"); // NOI18N
        p2back.setNextFocusableComponent(p2exit);
        p2back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p2backMouseClicked(evt);
            }
        });

        p2exit.setText(resourceMap.getString("p2exit.text")); // NOI18N
        p2exit.setName("p2exit"); // NOI18N
        p2exit.setNextFocusableComponent(p2back);
        p2exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p2exitMouseClicked(evt);
            }
        });

        p2a1.setBackground(resourceMap.getColor("p2a1.background")); // NOI18N
        p2a1.setText(resourceMap.getString("p2a1.text")); // NOI18N
        p2a1.setName("p2a1"); // NOI18N

        p2b1.setText(resourceMap.getString("p2b1.text")); // NOI18N
        p2b1.setName("p2b1"); // NOI18N

        p2c1.setText(resourceMap.getString("p2c1.text")); // NOI18N
        p2c1.setName("p2c1"); // NOI18N

        p2a2.setText(resourceMap.getString("p2a2.text")); // NOI18N
        p2a2.setName("p2a2"); // NOI18N

        p2b2.setText(resourceMap.getString("p2b2.text")); // NOI18N
        p2b2.setName("p2b2"); // NOI18N

        p2c2.setText(resourceMap.getString("p2c2.text")); // NOI18N
        p2c2.setName("p2c2"); // NOI18N

        p2c3.setText(resourceMap.getString("p2c3.text")); // NOI18N
        p2c3.setName("p2c3"); // NOI18N

        p2b3.setText(resourceMap.getString("p2b3.text")); // NOI18N
        p2b3.setName("p2b3"); // NOI18N

        p2a3.setText(resourceMap.getString("p2a3.text")); // NOI18N
        p2a3.setName("p2a3"); // NOI18N

        javax.swing.GroupLayout p2Layout = new javax.swing.GroupLayout(p2);
        p2.setLayout(p2Layout);
        p2Layout.setHorizontalGroup(
            p2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p2Layout.createSequentialGroup()
                .addGroup(p2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(p2Layout.createSequentialGroup()
                        .addGroup(p2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, p2Layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addGroup(p2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(p2a1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(p2b1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(p2c1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(34, 34, 34)
                                .addGroup(p2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(p2a2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(p2b2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(p2c2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(p2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(p2l1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(33, 33, 33)
                        .addGroup(p2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(p2b3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p2a3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p2c3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(p2back)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                        .addComponent(p2exit)))
                .addContainerGap())
        );
        p2Layout.setVerticalGroup(
            p2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(p2l1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(p2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(p2a1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p2a2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p2a3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(p2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(p2b1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p2b2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p2b3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(p2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(p2c1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p2c2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p2c3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(p2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(p2back)
                    .addComponent(p2exit))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        p3.setBackground(resourceMap.getColor("p3.background")); // NOI18N
        p3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        p3.setName("p3"); // NOI18N

        p3a1.setName("p3a1"); // NOI18N
        p3a1.setNextFocusableComponent(p3a2);

        p3b1.setName("p3b1"); // NOI18N
        p3b1.setNextFocusableComponent(p3b2);

        p3c1.setName("p3c1"); // NOI18N
        p3c1.setNextFocusableComponent(p3c2);

        p3a2.setName("p3a2"); // NOI18N
        p3a2.setNextFocusableComponent(p3a3);

        p3b2.setName("p3b2"); // NOI18N
        p3b2.setNextFocusableComponent(p3b3);

        p3c2.setName("p3c2"); // NOI18N
        p3c2.setNextFocusableComponent(p3c3);

        p3c3.setName("p3c3"); // NOI18N
        p3c3.setNextFocusableComponent(p3done);

        p3b3.setName("p3b3"); // NOI18N
        p3b3.setNextFocusableComponent(p3c1);

        p3a3.setName("p3a3"); // NOI18N
        p3a3.setNextFocusableComponent(p3b1);

        p3done.setText(resourceMap.getString("p3done.text")); // NOI18N
        p3done.setName("p3done"); // NOI18N
        p3done.setNextFocusableComponent(p3reset);
        p3done.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p3doneMouseClicked(evt);
            }
        });

        p3back.setText(resourceMap.getString("p3back.text")); // NOI18N
        p3back.setName("p3back"); // NOI18N
        p3back.setNextFocusableComponent(p3a1);
        p3back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p3backMouseClicked(evt);
            }
        });

        p3reset.setText(resourceMap.getString("p3reset.text")); // NOI18N
        p3reset.setName("p3reset"); // NOI18N
        p3reset.setNextFocusableComponent(p3back);
        p3reset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p3resetMouseClicked(evt);
            }
        });

        p3l1.setText(resourceMap.getString("p3l1.text")); // NOI18N
        p3l1.setName("p3l1"); // NOI18N

        javax.swing.GroupLayout p3Layout = new javax.swing.GroupLayout(p3);
        p3.setLayout(p3Layout);
        p3Layout.setHorizontalGroup(
            p3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p3Layout.createSequentialGroup()
                .addGroup(p3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(p3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(p3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(p3a1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p3b1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p3c1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(p3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(p3a2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p3b2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p3c2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                        .addGroup(p3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(p3a3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p3b3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p3c3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(p3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(p3Layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(p3back))
                            .addGroup(p3Layout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addGroup(p3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(p3reset)
                                    .addGroup(p3Layout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addComponent(p3done))))))
                    .addGroup(p3Layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(p3l1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        p3Layout.setVerticalGroup(
            p3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p3Layout.createSequentialGroup()
                .addGroup(p3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(p3Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(p3l1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addGroup(p3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(p3a1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p3a2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p3a3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(p3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(p3Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(p3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                    .addComponent(p3b1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(p3b2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(p3b3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(p3Layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(p3reset)))
                        .addGap(31, 31, 31)
                        .addGroup(p3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(p3c1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p3c2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p3c3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(p3Layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(p3done))
                    .addGroup(p3Layout.createSequentialGroup()
                        .addGap(216, 216, 216)
                        .addComponent(p3back)))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        b5.setText(resourceMap.getString("b5.text")); // NOI18N
        b5.setName("b5"); // NOI18N
        b5.setNextFocusableComponent(b1);
        b5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b5MouseClicked(evt);
            }
        });
        b5.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                b5MouseMoved(evt);
            }
        });
        b5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                b5FocusLost(evt);
            }
        });

        p4.setBackground(resourceMap.getColor("p4.background")); // NOI18N
        p4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        p4.setName("p4"); // NOI18N

        p4back.setText(resourceMap.getString("p4back.text")); // NOI18N
        p4back.setName("p4back"); // NOI18N
        p4back.setNextFocusableComponent(p4exit);
        p4back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p4backMouseClicked(evt);
            }
        });

        p4exit.setText(resourceMap.getString("p4exit.text")); // NOI18N
        p4exit.setName("p4exit"); // NOI18N
        p4exit.setNextFocusableComponent(p4back);
        p4exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p4exitMouseClicked(evt);
            }
        });

        p4l1.setText(resourceMap.getString("p4l1.text")); // NOI18N
        p4l1.setName("p4l1"); // NOI18N

        p4l2.setText(resourceMap.getString("p4l2.text")); // NOI18N
        p4l2.setName("p4l2"); // NOI18N

        p4ans.setText(resourceMap.getString("p4ans.text")); // NOI18N
        p4ans.setName("p4ans"); // NOI18N

        javax.swing.GroupLayout p4Layout = new javax.swing.GroupLayout(p4);
        p4.setLayout(p4Layout);
        p4Layout.setHorizontalGroup(
            p4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(p4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(p4l2)
                    .addComponent(p4l1, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE))
                .addGap(46, 46, 46))
            .addGroup(p4Layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addComponent(p4ans, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(70, Short.MAX_VALUE))
            .addGroup(p4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(p4back)
                .addGap(18, 18, 18)
                .addComponent(p4exit)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        p4Layout.setVerticalGroup(
            p4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p4Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(p4l1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(p4l2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(p4ans, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(p4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(p4back)
                    .addComponent(p4exit))
                .addGap(30, 30, 30))
        );

        b6.setText(resourceMap.getString("b6.text")); // NOI18N
        b6.setName("b6"); // NOI18N
        b6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b6MouseClicked(evt);
            }
        });
        b6.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                b6MouseMoved(evt);
            }
        });

        aaa.setText(resourceMap.getString("aaa.text")); // NOI18N
        aaa.setName("aaa"); // NOI18N

        aa.setText(resourceMap.getString("aa.text")); // NOI18N
        aa.setName("aa"); // NOI18N

        p5.setBackground(resourceMap.getColor("p5.background")); // NOI18N
        p5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        p5.setName("p5"); // NOI18N
        p5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p5MouseClicked(evt);
            }
        });

        p5l1.setText(resourceMap.getString("p5l1.text")); // NOI18N
        p5l1.setName("p5l1"); // NOI18N

        p5back.setText(resourceMap.getString("p5back.text")); // NOI18N
        p5back.setName("p5back"); // NOI18N
        p5back.setNextFocusableComponent(p5exit);
        p5back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p5backMouseClicked(evt);
            }
        });

        p5exit.setText(resourceMap.getString("p5exit.text")); // NOI18N
        p5exit.setName("p5exit"); // NOI18N
        p5exit.setNextFocusableComponent(p5back);
        p5exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p5exitMouseClicked(evt);
            }
        });

        p5a1.setBackground(resourceMap.getColor("p5a1.background")); // NOI18N
        p5a1.setText(resourceMap.getString("p5a1.text")); // NOI18N
        p5a1.setName("p5a1"); // NOI18N

        p5b1.setText(resourceMap.getString("p5b1.text")); // NOI18N
        p5b1.setName("p5b1"); // NOI18N

        p5c1.setText(resourceMap.getString("p5c1.text")); // NOI18N
        p5c1.setName("p5c1"); // NOI18N

        p5a2.setText(resourceMap.getString("p5a2.text")); // NOI18N
        p5a2.setName("p5a2"); // NOI18N

        p5b2.setText(resourceMap.getString("p5b2.text")); // NOI18N
        p5b2.setName("p5b2"); // NOI18N

        p5c2.setText(resourceMap.getString("p5c2.text")); // NOI18N
        p5c2.setName("p5c2"); // NOI18N

        p5c3.setText(resourceMap.getString("p5c3.text")); // NOI18N
        p5c3.setName("p5c3"); // NOI18N

        p5b3.setText(resourceMap.getString("p5b3.text")); // NOI18N
        p5b3.setName("p5b3"); // NOI18N

        p5a3.setText(resourceMap.getString("p5a3.text")); // NOI18N
        p5a3.setName("p5a3"); // NOI18N

        javax.swing.GroupLayout p5Layout = new javax.swing.GroupLayout(p5);
        p5.setLayout(p5Layout);
        p5Layout.setHorizontalGroup(
            p5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p5Layout.createSequentialGroup()
                .addGroup(p5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(p5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(p5back)
                        .addGap(18, 18, 18)
                        .addComponent(p5exit))
                    .addGroup(p5Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(p5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(p5a1, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                            .addComponent(p5b1, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                            .addComponent(p5c1, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE))
                        .addGap(26, 26, 26)
                        .addGroup(p5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(p5a2, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                            .addComponent(p5b2, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                            .addComponent(p5c2, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(p5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(p5a3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p5b3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p5c3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(p5Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(p5l1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        p5Layout.setVerticalGroup(
            p5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p5Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(p5l1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(p5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(p5a1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p5a2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p5a3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(p5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(p5b1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p5b2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p5b3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(p5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(p5c1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p5c2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p5c3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(p5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(p5back)
                    .addComponent(p5exit))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        sign.setFont(resourceMap.getFont("sign.font")); // NOI18N
        sign.setText(resourceMap.getString("sign.text")); // NOI18N
        sign.setName("sign"); // NOI18N

        size.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "MATRIX SIZE 3*3", "MATRIX SIZE  2*3", "MATRIX SIZE  3*2", "MATRIX SIZE  2*2" }));
        size.setName("size"); // NOI18N
        size.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sizeMouseClicked(evt);
            }
        });
        size.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                sizeMouseMoved(evt);
            }
        });

        inverse.setText(resourceMap.getString("inverse.text")); // NOI18N
        inverse.setName("inverse"); // NOI18N
        inverse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inverseMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(402, 402, 402)
                        .addComponent(l1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(b5)
                                    .addComponent(b6)
                                    .addComponent(b4)
                                    .addComponent(inverse)
                                    .addComponent(b3)
                                    .addComponent(b2)
                                    .addComponent(b1)
                                    .addComponent(l2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(size, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(mainPanelLayout.createSequentialGroup()
                                        .addComponent(p1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(sign, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(14, 14, 14)
                                        .addComponent(p2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(mainPanelLayout.createSequentialGroup()
                                        .addComponent(p3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(p5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(p4, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(aaa, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(73, 73, 73)
                                .addComponent(aa, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(aaa, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(l1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(aa, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainPanelLayout.createSequentialGroup()
                                .addComponent(l2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(53, 53, 53)
                                .addComponent(b1)
                                .addGap(18, 18, 18)
                                .addComponent(b2)
                                .addGap(18, 18, 18)
                                .addComponent(b3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 130, Short.MAX_VALUE)
                                .addComponent(size, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(p1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                        .addComponent(sign, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(141, 141, 141))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(p2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(inverse)
                        .addGap(14, 14, 14)
                        .addComponent(b4)
                        .addGap(18, 18, 18)
                        .addComponent(b6)
                        .addGap(18, 18, 18)
                        .addComponent(b5))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(p5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(priya1.Priya1App.class).getContext().getActionMap(Priya1View.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        statusPanel.setName("statusPanel"); // NOI18N

        statusPanelSeparator.setName("statusPanelSeparator"); // NOI18N

        statusMessageLabel.setName("statusMessageLabel"); // NOI18N

        statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        statusAnimationLabel.setName("statusAnimationLabel"); // NOI18N

        progressBar.setName("progressBar"); // NOI18N

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(statusPanelSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 809, Short.MAX_VALUE)
                    .addGroup(statusPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(statusMessageLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 653, Short.MAX_VALUE)
                        .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(186, 186, 186)
                .addComponent(statusAnimationLabel)
                .addContainerGap())
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addComponent(statusPanelSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(statusPanelLayout.createSequentialGroup()
                        .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(statusMessageLabel)
                            .addComponent(statusAnimationLabel))
                        .addGap(3, 3, 3))
                    .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        setComponent(mainPanel);
        setMenuBar(menuBar);
        setStatusBar(statusPanel);
    }// </editor-fold>//GEN-END:initComponents
int mat1=0,mat2=0,item;
String xyz = "";
    private void b1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b1MouseClicked
mat1 = 1;
        if(mat2 == 1)
{
    xyz = "TRACE OF MATRIX";
}
else if(mat2 == 2)
{
    xyz = "DETERMINANT OF MATRIX";
}
else if(mat2 == 3)
{
    xyz = "TRANSPOSE OF MATRIX";
}
else
{
    xyz = "------";
}
aa.setText("TOP:-ADDITION OF MATRICES------BOTTOM:-"+xyz);
item = size.getSelectedIndex();
if (item == 1)
{
    p1b1.setVisible(false);
    p1b2.setVisible(false);
    p1b3.setVisible(false);
    p1b11.setVisible(false);
    p1b22.setVisible(false);
    p1b33.setVisible(false);
    p2b1.setVisible(false);
    p2b2.setVisible(false);
    p2b3.setVisible(false);
    p2b1.setVisible(false);
    p2b2.setVisible(false);
    p2b3.setVisible(false);


    p1c1.setVisible(true);
    p1c2.setVisible(true);
    p1c3.setVisible(true);
    p1c11.setVisible(true);
    p1c22.setVisible(true);
    p1c33.setVisible(true);
    p1a1.setVisible(true);
    p1a2.setVisible(true);
    p1a3.setVisible(true);
    p1a11.setVisible(true);
    p1a22.setVisible(true);
    p1a33.setVisible(true);
    p2c1.setVisible(true);
    p2c2.setVisible(true);
    p2c3.setVisible(true);
    p2a1.setVisible(true);
    p2a2.setVisible(true);
    p2a3.setVisible(true);

}
if (item == 2)
{
    p1a2.setVisible(false);
    p1b2.setVisible(false);
    p1c2.setVisible(false);
    p1a22.setVisible(false);
    p1b22.setVisible(false);
    p1c22.setVisible(false);
    p2a2.setVisible(false);
    p2b2.setVisible(false);
    p2c2.setVisible(false);


     p1a1.setVisible(true);
            p1a3.setVisible(true);
            p1b1.setVisible(true);
            p1b3.setVisible(true);
            p1c1.setVisible(true);
            p1c3.setVisible(true);
            p1a11.setVisible(true);
            p1a33.setVisible(true);
            p1b11.setVisible(true);
            p1b33.setVisible(true);
            p1c11.setVisible(true);
            p1c33.setVisible(true);
            p2a1.setVisible(true);
            p2a3.setVisible(true);
            p2b1.setVisible(true);
            p2b3.setVisible(true);
            p2c1.setVisible(true);
            p2c3.setVisible(true);
}
if (item == 3)
{
    p1b1.setVisible(false);
    p1b2.setVisible(false);
    p1b3.setVisible(false);
    p1b11.setVisible(false);
    p1b22.setVisible(false);
    p1b33.setVisible(false);
    p1a2.setVisible(false);
    p1c2.setVisible(false);
    p1a22.setVisible(false);
    p1c22.setVisible(false);
    p2b1.setVisible(false);
    p2b2.setVisible(false);
    p2b3.setVisible(false);
    p2a2.setVisible(false);
    p2c2.setVisible(false);

            p1a1.setVisible(true);
            p1a3.setVisible(true);
            p1c1.setVisible(true);
            p1c3.setVisible(true);
            p1a11.setVisible(true);
            p1a33.setVisible(true);
            p1c11.setVisible(true);
            p1c33.setVisible(true);
            p2a1.setVisible(true);
            p2a3.setVisible(true);
            p2c1.setVisible(true);
            p2c3.setVisible(true);
}
p1.setVisible(true);
p2.setVisible(false);
 p1back.setVisible(true);
 sign.setVisible(false);
 p1sign.setText("+");
    }//GEN-LAST:event_b1MouseClicked

    private void b3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b3MouseClicked
mat1 = 3;
        if(mat2 == 1)
{
    xyz = "TRACE OF MATRIX";
}
else if(mat2 == 2)
{
    xyz = "DETERMINANT OF MATRIX";
}
else if(mat2 == 3)
{
    xyz = "TRANSPOSE OF MATRIX";
}
else
{
    xyz = "------";
}
aa.setText("TOP:-PRODUCT OF MATRICES------BOTTOM:-"+xyz);
item = size.getSelectedIndex();
if ( item == 1)
{
    p1b1.setVisible(false);
    p1b2.setVisible(false);
    p1b3.setVisible(false);
    p1a22.setVisible(false);
    p1b22.setVisible(false);
    p1c22.setVisible(false);
    p2b1.setVisible(false);
    p2b2.setVisible(false);
    p2b3.setVisible(false);
    p2a2.setVisible(false);
    p2c2.setVisible(false);


        p1a1.setVisible(true);
        p1a3.setVisible(true);
        p1c1.setVisible(true);
        p1c3.setVisible(true);
        p1a11.setVisible(true);
        p1a33.setVisible(true);
        p1c11.setVisible(true);
        p1c33.setVisible(true);
        p2a1.setVisible(true);
        p2a3.setVisible(true);
        p2c1.setVisible(true);
        p2c3.setVisible(true);
}
if ( item == 2)
{
    p1b11.setVisible(false);
    p1b22.setVisible(false);
    p1b33.setVisible(false);
    p1a2.setVisible(false);
    p1b2.setVisible(false);
    p1c2.setVisible(false);

            p1a1.setVisible(true);
            p1a3.setVisible(true);
            p1b1.setVisible(true);
            p1b3.setVisible(true);
            p1c1.setVisible(true);
            p1c3.setVisible(true);
            p1a11.setVisible(true);
            p1a22.setVisible(true);
            p1a33.setVisible(true);
            p1c11.setVisible(true);
            p1c22.setVisible(true);
            p1c33.setVisible(true);
}
if (item == 3)
{
    p1b1.setVisible(false);
    p1b2.setVisible(false);
    p1b3.setVisible(false);
    p1b11.setVisible(false);
    p1b22.setVisible(false);
    p1b33.setVisible(false);
    p1a2.setVisible(false);
    p1c2.setVisible(false);
    p1a22.setVisible(false);
    p1c22.setVisible(false);
    p2b1.setVisible(false);
    p2b2.setVisible(false);
    p2b3.setVisible(false);
    p2a2.setVisible(false);
    p2c2.setVisible(false);

            p1a1.setVisible(true);
            p1a3.setVisible(true);
            p1c1.setVisible(true);
            p1c3.setVisible(true);
            p1a11.setVisible(true);
            p1a33.setVisible(true);
            p1c11.setVisible(true);
            p1c33.setVisible(true);
            p2a1.setVisible(true);
            p2a3.setVisible(true);
            p2c1.setVisible(true);
            p2c3.setVisible(true);
}
        p1.setVisible(true);
p2.setVisible(false);
p1back.setVisible(true);
sign.setVisible(false);
p1sign.setText("*");
}//GEN-LAST:event_b3MouseClicked

    private void b2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b2MouseClicked
       mat1 = 2 ;
        if(mat2 == 1)
{
    xyz = "TRACE OF MATRIX";
}
else if(mat2 == 2)
{
    xyz = "DETERMINANT OF MATRIX";
}
else if(mat2 == 3)
{
    xyz = "TRANSPOSE OF MATRIX";
}
else
{
    xyz = "------";
}
aa.setText("TOP:-DIFFERENCE BETWEEN MATRICES------BOTTOM:-"+xyz);
item = size.getSelectedIndex();
if (item == 1)
{
    p1b1.setVisible(false);
    p1b2.setVisible(false);
    p1b3.setVisible(false);
    p1b11.setVisible(false);
    p1b22.setVisible(false);
    p1b33.setVisible(false);
    p2b1.setVisible(false);
    p2b2.setVisible(false);
    p2b3.setVisible(false);

    p1c1.setVisible(true);
    p1c2.setVisible(true);
    p1c3.setVisible(true);
    p1c11.setVisible(true);
    p1c22.setVisible(true);
    p1c33.setVisible(true);
    p1a1.setVisible(true);
    p1a2.setVisible(true);
    p1a3.setVisible(true);
    p1a11.setVisible(true);
    p1a22.setVisible(true);
    p1a33.setVisible(true);
    p2c1.setVisible(true);
    p2c2.setVisible(true);
    p2c3.setVisible(true);
    p2a1.setVisible(true);
    p2a2.setVisible(true);
    p2a3.setVisible(true);

}
if (item == 2)
{
    p1a2.setVisible(false);
    p1b2.setVisible(false);
    p1c2.setVisible(false);
    p1a22.setVisible(false);
    p1b22.setVisible(false);
    p1c22.setVisible(false);
    p2a2.setVisible(false);
    p2b2.setVisible(false);
    p2c2.setVisible(false);

    p1a1.setVisible(true);
            p1a3.setVisible(true);
            p1b1.setVisible(true);
            p1b3.setVisible(true);
            p1c1.setVisible(true);
            p1c3.setVisible(true);
            p1a11.setVisible(true);
            p1a33.setVisible(true);
            p1b11.setVisible(true);
            p1b33.setVisible(true);
            p1c11.setVisible(true);
            p1c33.setVisible(true);
            p2a1.setVisible(true);
            p2a3.setVisible(true);
            p2b1.setVisible(true);
            p2b3.setVisible(true);
            p2c1.setVisible(true);
            p2c3.setVisible(true);
}
if (item == 3)
{
    p1b1.setVisible(false);
    p1b2.setVisible(false);
    p1b3.setVisible(false);
    p1b11.setVisible(false);
    p1b22.setVisible(false);
    p1b33.setVisible(false);
    p1a2.setVisible(false);
    p1c2.setVisible(false);
    p1a22.setVisible(false);
    p1c22.setVisible(false);
    p2b1.setVisible(false);
    p2b2.setVisible(false);
    p2b3.setVisible(false);
    p2a2.setVisible(false);
    p2c2.setVisible(false);


            p1a1.setVisible(true);
            p1a3.setVisible(true);
            p1c1.setVisible(true);
            p1c3.setVisible(true);
            p1a11.setVisible(true);
            p1a33.setVisible(true);
            p1c11.setVisible(true);
            p1c33.setVisible(true);
            p2a1.setVisible(true);
            p2a3.setVisible(true);
            p2c1.setVisible(true);
            p2c3.setVisible(true);
}
        p1.setVisible(true);
       p2.setVisible(false);
       p1back.setVisible(true);
        sign.setVisible(false);
        p1sign.setText("-");
    }//GEN-LAST:event_b2MouseClicked

    private void p1resetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p1resetMouseClicked
        p1a1.setText("");
        p1a2.setText("");
        p1a3.setText("");
        p1b1.setText("");
        p1b2.setText("");
        p1b3.setText("");
        p1c1.setText("");
        p1c2.setText("");
        p1c3.setText("");
        p1a11.setText("");
        p1a22.setText("");
        p1a33.setText("");
        p1b11.setText("");
        p1b22.setText("");
        p1b33.setText("");
        p1c11.setText("");
        p1c22.setText("");
        p1c33.setText("");
        p2a1.setText("");
        p2a2.setText("");
        p2a3.setText("");
        p2b1.setText("");
        p2b2.setText("");
        p2b3.setText("");
        p2c1.setText("");
        p2c2.setText("");
        p2c3.setText("");
aaa.setText("SELECT A FUNCTION");
        sign.setVisible(false);
        p1back.setVisible(true);
        p2.setVisible(false);
}//GEN-LAST:event_p1resetMouseClicked

    private void p1backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p1backMouseClicked
        mat1 = 0;
        p1.setVisible(false);
        aaa.setText("SELECT A FUNCTION");
        if(mat2 == 1)
{
    xyz = "TRACE OF MATRIX";
}
else if(mat2 == 2)
{
    xyz = "DETERMINANT OF MATRIX";
}
else if(mat2 == 3)
{
    xyz = "TRANSPOSE OF MATRIX";
}
else
{
    xyz = "------";
}
aa.setText("TOP:-------BOTTOM:-"+xyz);
}//GEN-LAST:event_p1backMouseClicked

    private void p1doneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p1doneMouseClicked
        try{
        item = size.getSelectedIndex();
        int a1,a2,a3,b1,b2,b3,c1,c2,c3,a11,a22,a33,b11,b22,b33,c11,c22,c33;
        String p1s1,p1s2,p1s3,p1s4,p1s5,p1s6,p1s7,p1s8,p1s9;
        int aa1=0,aa2=0,aa3=0,bb1=0,bb2=0,bb3=0,cc1=0,cc2=0,cc3=0;
        if(item == 0)
        {
            p1s1 = p1a1.getText();
        a1 = Integer.parseInt(p1s1);
        p1s2 = p1a2.getText();
        a2 = Integer.parseInt(p1s2);
        p1s3 = p1a3.getText();
        a3 = Integer.parseInt(p1s3);
        p1s4 = p1b1.getText();
        b1 = Integer.parseInt(p1s4);
        p1s5 = p1b2.getText();
        b2 = Integer.parseInt(p1s5);
        p1s6 = p1b3.getText();
        b3 = Integer.parseInt(p1s6);
        p1s7 = p1c1.getText();
        c1 = Integer.parseInt(p1s7);
        p1s8 = p1c2.getText();
        c2 = Integer.parseInt(p1s8);
        p1s9 = p1c3.getText();
        c3 = Integer.parseInt(p1s9);
        p1s1 = p1a11.getText();
        a11 = Integer.parseInt(p1s1);
        p1s2 = p1a22.getText();
        a22 = Integer.parseInt(p1s2);
        p1s3 = p1a33.getText();
        a33 = Integer.parseInt(p1s3);
        p1s4 = p1b11.getText();
        b11 = Integer.parseInt(p1s4);
        p1s5 = p1b22.getText();
        b22 = Integer.parseInt(p1s5);
        p1s6 = p1b33.getText();
        b33 = Integer.parseInt(p1s6);
        p1s7 = p1c11.getText();
        c11 = Integer.parseInt(p1s7);
        p1s8 = p1c22.getText();
        c22 = Integer.parseInt(p1s8);
        p1s9 = p1c33.getText();
        c33 = Integer.parseInt(p1s9);
        if ( mat1 == 1) {
            aa1 = a1 + a11 ;
            aa2 = a2 + a22 ;
            aa3 = a3 + a33 ;
            bb1 = b1 + b11 ;
            bb2 = b2 + b22 ;
            bb3 = b3 + b33 ;
            cc1 = c1 + c11 ;
            cc2 = c2 + c22 ;
            cc3 = c3 + c33 ;
        }//GEN-LAST:event_p1doneMouseClicked
if ( mat1 == 2)
{
     aa1 = a1 - a11 ;
     aa2 = a2 - a22 ;
     aa3 = a3 - a33 ;
     bb1 = b1 - b11 ;
     bb2 = b2 - b22 ;
     bb3 = b3 - b33 ;
     cc1 = c1 - c11 ;
     cc2 = c2 - c22 ;
     cc3 = c3 - c33 ;

    }
if ( mat1 == 3 )
{
    aa1 = (a1 * a11)+(a2 * b11)+(a3 * c11);
    aa2 = (a1 * a22)+(a2 * b22)+(a3 * c22);
    aa3 = (a1 * a33)+(a2 * b33)+(a3 * c33);
    bb1 = (b1 * a11)+(b2 * b11)+(b3 * c11);
    bb2 = (b1 * a22)+(b2 * b22)+(b3 * c22);
    bb3 = (b1 * a33)+(b2 * b33)+(b3 * c33);
    cc1 = (c1 * a11)+(c2 * b11)+(c3 * c11);
    cc2 = (c1 * a22)+(c2 * b22)+(c3 * c22);
    cc3 = (c1 * a33)+(c2 * b33)+(c3 * c33);

}

p2a1.setText(aa1+"");
p2a2.setText(aa2+"");
p2a3.setText(aa3+"");
p2b1.setText(bb1+"");
p2b2.setText(bb2+"");
p2b3.setText(bb3+"");
p2c1.setText(cc1+"");
p2c2.setText(cc2+"");
p2c3.setText(cc3+"");
        }
        if (item == 1)
        { 
            if ( mat1 == 1 || mat1 == 2)
            {
        p1s1 = p1a1.getText();
        a1 = Integer.parseInt(p1s1);
        p1s2 = p1a2.getText();
        a2 = Integer.parseInt(p1s2);
        p1s3 = p1a3.getText();
        a3 = Integer.parseInt(p1s3);
        p1s7 = p1c1.getText();
        c1 = Integer.parseInt(p1s7);
        p1s8 = p1c2.getText();
        c2 = Integer.parseInt(p1s8);
        p1s9 = p1c3.getText();
        c3 = Integer.parseInt(p1s9);
        p1s1 = p1a11.getText();
        a11 = Integer.parseInt(p1s1);
        p1s2 = p1a22.getText();
        a22 = Integer.parseInt(p1s2);
        p1s3 = p1a33.getText();
        a33 = Integer.parseInt(p1s3);
        p1s7 = p1c11.getText();
        c11 = Integer.parseInt(p1s7);
        p1s8 = p1c22.getText();
        c22 = Integer.parseInt(p1s8);
        p1s9 = p1c33.getText();
        c33 = Integer.parseInt(p1s9);
        if (mat1 == 1)
        {
            aa1 = a1 + a11 ;
            aa2 = a2 + a22 ;
            aa3 = a3 + a33 ;
            cc1 = c1 + c11 ;
            cc2 = c2 + c22 ;
            cc3 = c3 + c33 ;
        }
        if (mat1 == 2)
        {
            aa1 = a1 - a11 ;
            aa2 = a2 - a22 ;
            aa3 = a3 - a33 ;
            cc1 = c1 - c11 ;
            cc2 = c2 - c22 ;
            cc3 = c3 - c33 ;
        }
            }
 if (mat1 == 3)
 {
     p1s1 = p1a1.getText();
        a1 = Integer.parseInt(p1s1);
        p1s2 = p1a2.getText();
        a2 = Integer.parseInt(p1s2);
        p1s3 = p1a3.getText();
        a3 = Integer.parseInt(p1s3);
        p1s4 = p1b1.getText();
        p1s7 = p1c1.getText();
        c1 = Integer.parseInt(p1s7);
        p1s8 = p1c2.getText();
        c2 = Integer.parseInt(p1s8);
        p1s9 = p1c3.getText();
        c3 = Integer.parseInt(p1s9);
        p1s1 = p1a11.getText();
        a11 = Integer.parseInt(p1s1);
        p1s3 = p1a33.getText();
        a33 = Integer.parseInt(p1s3);
        p1s4 = p1b11.getText();
        b11 = Integer.parseInt(p1s4);
        p1s6 = p1b33.getText();
        b33 = Integer.parseInt(p1s6);
        p1s7 = p1c11.getText();
        c11 = Integer.parseInt(p1s7);
        p1s9 = p1c33.getText();
        c33 = Integer.parseInt(p1s9);
     aa1 = ((a1 * a11) + (a2 * b11) + (a3 * c11));
     aa3 = ((a1 * a33) + (a2 * b33) + (a3 * c33));
     c11 = ((c1 * a11) + (c2 * b11) + (c3 * c11));
     c33 = ((c1 * a33) + (c2 * b33) + (c3 * c33));
 }
 p2a1.setText(aa1+"");
p2a2.setText(aa2+"");
p2a3.setText(aa3+"");
p2c1.setText(cc1+"");
p2c2.setText(cc2+"");
p2c3.setText(cc3+"");
       }
        if (item == 2)
        {
        
            if(mat1 == 1 || mat1 == 2)
            {
                p1s1 = p1a1.getText();
        a1 = Integer.parseInt(p1s1);
        p1s3 = p1a3.getText();
        a3 = Integer.parseInt(p1s3);
        p1s4 = p1b1.getText();
        b1 = Integer.parseInt(p1s4);
        p1s6 = p1b3.getText();
        b3 = Integer.parseInt(p1s6);
        p1s7 = p1c1.getText();
        c1 = Integer.parseInt(p1s7);
        p1s9 = p1c3.getText();
        c3 = Integer.parseInt(p1s9);
        p1s1 = p1a11.getText();
        a11 = Integer.parseInt(p1s1);
        p1s3 = p1a33.getText();
        a33 = Integer.parseInt(p1s3);
        p1s4 = p1b11.getText();
        b11 = Integer.parseInt(p1s4);
        p1s6 = p1b33.getText();
        b33 = Integer.parseInt(p1s6);
        p1s7 = p1c11.getText();
        c11 = Integer.parseInt(p1s7);
        p1s9 = p1c33.getText();
        c33 = Integer.parseInt(p1s9);
        if(mat1 == 1)
        {
            aa1 = a1 + a11;
            bb1 = b1 + b11;
            cc1 = c1 + c11;
            aa3 = a3 + a33;
            bb3 = b3 + b33;
            cc3 = c3 + c33;
        }
        if(mat1 == 2)
        {
            aa1 = a1 - a11;
            bb1 = b1 - b11;
            cc1 = c1 - c11;
            aa3 = a3 - a33;
            bb3 = b3 - b33;
            cc3 = c3 - c33;
        }
p2a1.setText(aa1+"");
p2b1.setText(bb1+"");
p2c1.setText(cc1+"");
p2a3.setText(aa3+"");
p2b3.setText(bb3+"");
p2c3.setText(cc3+"");
        }
            if(mat1 == 3)
            {
        p1s1 = p1a1.getText();
        a1 = Integer.parseInt(p1s1);
        p1s3 = p1a3.getText();
        a3 = Integer.parseInt(p1s3);
        p1s4 = p1b1.getText();
        b1 = Integer.parseInt(p1s4);
        p1s6 = p1b3.getText();
        b3 = Integer.parseInt(p1s6);
        p1s7 = p1c1.getText();
        c1 = Integer.parseInt(p1s7);
        p1s9 = p1c3.getText();
        c3 = Integer.parseInt(p1s9);
        p1s1 = p1a11.getText();
        a11 = Integer.parseInt(p1s1);
        p1s2 = p1a22.getText();
        a22 = Integer.parseInt(p1s2);
        p1s3 = p1a33.getText();
        a33 = Integer.parseInt(p1s3);
        p1s7 = p1c11.getText();
        c11 = Integer.parseInt(p1s7);
        p1s8 = p1c22.getText();
        c22 = Integer.parseInt(p1s8);
        p1s9 = p1c33.getText();
        c33 = Integer.parseInt(p1s9);
        aa1 = ((a1*a11) + (b1*a22) + (c1*a33));
        aa3 = ((a3*a11) + (b3*a22) + (c3*a33));
        cc1 = ((a1*c11) + (b1*c22) + (c1*c33));
        cc3 = ((a3*c11) + (b3*c22) + (c3*c33));
        p2a1.setText(aa1+"");
        p2a3.setText(aa3+"");
        p2c1.setText(cc1+"");
        p2c3.setText(cc3+"");
           }
        }
        if (item == 3)
        {
        p1s1 = p1a1.getText();
        a1 = Integer.parseInt(p1s1);
        p1s3 = p1a3.getText();
        a3 = Integer.parseInt(p1s3);
        p1s7 = p1c1.getText();
        c1 = Integer.parseInt(p1s7);
        p1s9 = p1c3.getText();
        c3 = Integer.parseInt(p1s9);
        p1s1 = p1a11.getText();
        a11 = Integer.parseInt(p1s1);
        p1s3 = p1a33.getText();
        a33 = Integer.parseInt(p1s3);
        p1s7 = p1c11.getText();
        c11 = Integer.parseInt(p1s7);
        p1s9 = p1c33.getText();
        c33 = Integer.parseInt(p1s9);
        if(mat1 == 1)
        {
            aa1 = a1 + a11;
            aa3 = a3 + a33;
            cc1 = c1 + c11;
            cc3 = c3 + c33;
        }
        if(mat1 == 2)
        {
            aa1 = a1 - a11;
            aa3 = a3 - a33;
            cc1 = c1 - c11;
            cc3 = c3 - c33;
        }
        if(mat1 == 3)
        {
            aa1 = ((a1*a11) + (a3*c11));
            aa3 = ((a1*a33) + (a3*c33));
            cc1 = ((c1*a11) + (c3*c11));
            cc3 = ((c1*a33) + (c3*c33));
        }
        p2a1.setText(aa1+"");
        p2a3.setText(aa3+"");
        p2c1.setText(cc1+"");
        p2c3.setText(cc3+"");
        }
p2.setVisible(true);
sign.setVisible(true);
p1back.setVisible(false);
        }
        catch(Exception e){
            aaa.setText("Input Error");
        }
    }
        private void p2exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p2exitMouseClicked
mat1 = 0;
            if(mat2 == 1)
{
    xyz = "TRACE OF MATRIX";
}
else if(mat2 == 2)
{
    xyz = "DETERMINANT OF MATRIX";
}
else if(mat2 == 3)
{
    xyz = "TRANSPOSE OF MATRIX";
}
else
{
    xyz = "------";
}
aa.setText("TOP:-------BOTTOM:-"+xyz);
            aaa.setText("SELECT A FUNCTION");
            p2.setVisible(false);
            p1.setVisible(false);
            sign.setVisible(false);
            p1a1.setText("");
            p1a2.setText("");
            p1a3.setText("");
            p1b1.setText("");
            p1b2.setText("");
            p1b3.setText("");
            p1c1.setText("");
            p1c2.setText("");
            p1c3.setText("");
            p1a11.setText("");
            p1a22.setText("");
            p1a33.setText("");
            p1b11.setText("");
            p1b22.setText("");
            p1b33.setText("");
            p1c11.setText("");
            p1c22.setText("");
            p1c33.setText("");
            p2a1.setText("");
            p2a2.setText("");
            p2a3.setText("");
            p2b1.setText("");
            p2b2.setText("");
            p2b3.setText("");
            p2c1.setText("");
            p2c2.setText("");
            p2c3.setText("");
}//GEN-LAST:event_p2exitMouseClicked

        private void p2backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p2backMouseClicked
            p2.setVisible(false);
            sign.setVisible(false);
            p1back.setVisible(true);
}//GEN-LAST:event_p2backMouseClicked
String p3s1,p3s2,p3s3,p3s4,p3s5,p3s6,p3s7,p3s8,p3s9;
int det,a111,b111,c111,a222,b222,c222,a333,b333,c333,trace;
        private void p3doneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p3doneMouseClicked
try{
if(item == 0)
{
p3s1 = p3a1.getText();
a111 = Integer.parseInt(p3s1);
p3s2 = p3a2.getText();
a222 = Integer.parseInt(p3s2);
p3s3 = p3a3.getText();
a333 = Integer.parseInt(p3s3);
p3s4 = p3b1.getText();
b111 = Integer.parseInt(p3s4);
p3s5 = p3b2.getText();
b222 = Integer.parseInt(p3s5);
p3s6 = p3b3.getText();
b333 = Integer.parseInt(p3s6);
p3s7 = p3c1.getText();
c111 = Integer.parseInt(p3s7);
p3s8 = p3c2.getText();
c222 = Integer.parseInt(p3s8);
p3s9 = p3c3.getText();
c333 = Integer.parseInt(p3s9);
if ( mat2 == 1)
{
    trace = a111 + b222 + c333 ;
    p4.setVisible(true);
    p4ans.setText(trace + "");
}
if ( mat2 == 2)
{
    int x1 = a111 * ( ( b222 * c333 )-( b333 * c222 ) );
    int x2 = a222 * ( ( b111 * c333 )-( b333 * c111 ) );
    int x3 = a333 * ( ( b111 * c222 )-( b222 * c111 ) );
    det =  x1 - x2 + x3 ;
    p4.setVisible(true);
        p4ans.setText(det + "");
}
if ( mat2 == 3)
{
    p5.setVisible(true);
    p5a1.setText(a111 + "");
    p5a2.setText(b111 + "");
    p5a3.setText(c111 + "");
    p5b1.setText(a222 + "");
    p5b2.setText(b222 + "");
    p5b3.setText(c222 + "");
    p5c1.setText(a333 + "");
    p5c2.setText(b333 + "");
    p5c3.setText(c333 + "");
}
p3back.setVisible(false);
}//GEN-LAST:event_p3doneMouseClicked
if(item == 1)
{
if ( mat2 == 1 || mat2 == 2)
{
}
if ( mat2 == 3)
{
p3s1 = p3a1.getText();
a111 = Integer.parseInt(p3s1);
p3s2 = p3a2.getText();
a222 = Integer.parseInt(p3s2);
p3s3 = p3a3.getText();
a333 = Integer.parseInt(p3s3);
p3s4 = p3b1.getText();
b111 = Integer.parseInt(p3s4);
p3s5 = p3b2.getText();
b222 = Integer.parseInt(p3s5);
p3s6 = p3b3.getText();
b333 = Integer.parseInt(p3s6);

p5a1.setText(a111 + "");
    p5b1.setText(a222 + "");
    p5c1.setText(a333 + "");
    p5a2.setText(b111 + "");
    p5b2.setText(b222 + "");
    p5c2.setText(b333 + "");
p5.setVisible(true);
    p3back.setVisible(false);
}
}
 if(item == 2)
 {
if ( mat2 == 1 || mat2 == 2)
{
}
if ( mat2 == 3)
{
p3s1 = p3a1.getText();
a111 = Integer.parseInt(p3s1);
p3s2 = p3a2.getText();
a222 = Integer.parseInt(p3s2);
p3s4 = p3b1.getText();
b111 = Integer.parseInt(p3s4);
p3s5 = p3b2.getText();
b222 = Integer.parseInt(p3s5);
p3s7 = p3c1.getText();
c111 = Integer.parseInt(p3s7);
p3s8 = p3c2.getText();
c222 = Integer.parseInt(p3s8);

p5a1.setText(a111 + "");
    p5b1.setText(a222 + "");
    p5a2.setText(b111 + "");
    p5b2.setText(b222 + "");
    p5a3.setText(c111 + "");
    p5b3.setText(c222 + "");
p5.setVisible(true);
    p3back.setVisible(false);
}
 }
if(item == 3)
{
p3s1 = p3a1.getText();
a111 = Integer.parseInt(p3s1);
p3s2 = p3a2.getText();
a222 = Integer.parseInt(p3s2);
p3s4 = p3b1.getText();
b111 = Integer.parseInt(p3s4);
p3s5 = p3b2.getText();
b222 = Integer.parseInt(p3s5);
if ( mat2 == 1)
{
    trace = a111 + b222;
    p4.setVisible(true);
    p4ans.setText(trace + "");
}
if ( mat2 == 2)
{
    det = ( (a111 * b222) - (a222 * b111) ) ;
    p4.setVisible(true);
        p4ans.setText(det + "");
}
if ( mat2 == 3)
{
    p5a1.setText(a111 + "");
    p5a2.setText(b111 + "");
    p5b1.setText(a222 + "");
    p5b2.setText(b222 + "");
    p5.setVisible(true);
}
p3back.setVisible(false);

}
if(item == 4){
    int mat_size = size.getSelectedIndex();
    if(mat_size == 3){//........FOR 2 x 2 MATRIX

                double a1b1 = Double.parseDouble(p3a1.getText());
                double a1b2 = Double.parseDouble(p3a2.getText());
                double a2b1 = Double.parseDouble(p3b1.getText());
                double a2b2 = Double.parseDouble(p3b2.getText());

                Matrix m = new Matrix(2,2);
                m.setElement(a1b1, 0, 0);
                m.setElement(a1b2, 0, 1);
                m.setElement(a2b1, 1, 0);
                m.setElement(a2b2, 1, 1);
                m = m.getInverse();
/*
                a1b1 = m.getElement(0, 0);
                a1b2 = m.getElement(0, 1);
                a2b1 = m.getElement(1, 0);
                a2b2 = m.getElement(1, 1);
*/
                p5.setVisible(true);
                p5a1.setText(Double.toString(m.getElement(0, 0)));
                p5a2.setText(Double.toString(m.getElement(0, 1)));
                p5b1.setText(Double.toString(m.getElement(1, 0)));
                p5b2.setText(Double.toString(m.getElement(1, 1)));
            }
    else if(mat_size == 0){

        double a11 = Double.parseDouble(p3a1.getText());
        double a12 = Double.parseDouble(p3a2.getText());
        double a13 = Double.parseDouble(p3a3.getText());

        double a21 = Double.parseDouble(p3b1.getText());
        double a22 = Double.parseDouble(p3b2.getText());
        double a23 = Double.parseDouble(p3b3.getText());

        double a31 = Double.parseDouble(p3c1.getText());
        double a32 = Double.parseDouble(p3c2.getText());
        double a33 = Double.parseDouble(p3c3.getText());

        Matrix m = new Matrix(3, 3);
        m.setElement(a11, 0, 0);
        m.setElement(a12, 0, 1);
        m.setElement(a13, 0, 2);

        m.setElement(a21, 1, 0);
        m.setElement(a22, 1, 1);
        m.setElement(a23, 1, 2);

        m.setElement(a31, 2, 0);
        m.setElement(a32, 2, 1);
        m.setElement(a33, 2, 2);

        m = m.getInverse();

        p5.setVisible(true);
        p5a1.setText(Double.toString(m.getElement(0, 0)));
        p5a2.setText(Double.toString(m.getElement(0, 1)));
        p5a3.setText(Double.toString(m.getElement(0, 2)));

        p5b1.setText(Double.toString(m.getElement(1, 0)));
        p5b2.setText(Double.toString(m.getElement(1, 1)));
        p5b3.setText(Double.toString(m.getElement(1, 2)));

        p5c1.setText(Double.toString(m.getElement(2, 0)));
        p5c2.setText(Double.toString(m.getElement(2, 1)));
        p5c3.setText(Double.toString(m.getElement(2, 2)));
    }
}
        }
catch(Exception e){
    aaa.setText("Input Error");
}
}
        private void p3backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p3backMouseClicked
mat2 = 0;
            if(mat1 == 1)
{
    xyz = "ADDITION OF MATRICES";
}
else if(mat1 == 2)
{
    xyz = "DIFFERENCE BETWEEN MATRICES";
}
else if(mat1 == 3)
{
    xyz = "PRODUCT OF MATRICES";
}
else
{
    xyz = "------";
}
aa.setText("TOP:-"+xyz+"BOTTOM:-------");
  aaa.setText("SELECT A FUNCTION");
            p3.setVisible(false);
}//GEN-LAST:event_p3backMouseClicked

        private void p3resetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p3resetMouseClicked
            p3a1.setText("");
            p3a2.setText("");
            p3a3.setText("");
            p3b1.setText("");
            p3b2.setText("");
            p3b3.setText("");
            p3c1.setText("");
            p3c2.setText("");
            p3c3.setText("");
            p3back.setVisible(true);
            if (mat2 == 1 || mat2 == 2)
            {
            p4ans.setText("");
            p4.setVisible(false);
            }
            if ( mat2 == 3 )
            {
                p5.setVisible(false);
                p5a1.setText("");
                p5a2.setText("");
                p5a3.setText("");
                p5b1.setText("");
                p5b2.setText("");
                p5b3.setText("");
                p5c1.setText("");
                p5c2.setText("");
                p5c3.setText("");
            }
}//GEN-LAST:event_p3resetMouseClicked

        private void b4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b4MouseClicked
mat2 = 1 ;
            
item = size.getSelectedIndex();
if(item == 0)
{
p3a1.setVisible(true);
p3a2.setVisible(true);
p3a3.setVisible(true);
p3b1.setVisible(true);
p3b2.setVisible(true);
p3b3.setVisible(true);
p3c1.setVisible(true);
p3c2.setVisible(true);
p3c3.setVisible(true);
p3.setVisible(true);
p4.setVisible(false);
p5.setVisible(false);
p3back.setVisible(true);
p4l1.setVisible(true);
p4l2.setVisible(false);
if(mat1 == 1)
{
    xyz = "ADDITION OF MATRIX";
}
else if(mat1 == 2)
{
    xyz = "DIFFERENCE BETWEEN MATRIX";
}
else if(mat1 == 3)
{
    xyz = "PRODUCT OF MATRIX";
}
else
{
    xyz = "------";
}
aa.setText("TOP:-"+xyz+"------BOTTOM:-TRACE OF 3*3 MATRIX");
}
if(item == 1 || item == 2)
{
p3.setVisible(false);
p4.setVisible(false);
p5.setVisible(false);
p3back.setVisible(false);
if(mat1 == 1)
{
    xyz = "ADDITION OF MATRIX";
}
else if(mat1 == 2)
{
    xyz = "DIFFERENCE BETWEEN MATRIX";
}
else if(mat1 == 3)
{
    xyz = "PRODUCT OF MATRIX";
}
else
{
    xyz = "------";
}
aa.setText("TOP:-"+xyz+"------BOTTOM:-ERROR-TRACE ONLY FOR SQUARE MATRIX");
}
if ( item == 3)
{
    p3a1.setVisible(true);
    p3a2.setVisible(true);
    p3a3.setVisible(false);
    p3b1.setVisible(true);
    p3b2.setVisible(true);
    p3b3.setVisible(false);
    p3c1.setVisible(false);
    p3c2.setVisible(false);
    p3c3.setVisible(false);
    p3.setVisible(true);
p4.setVisible(false);
p3back.setVisible(true);
p5.setVisible(false);
p4l1.setVisible(true);
p4l2.setVisible(false);
if(mat1 == 1)
{
    xyz = "ADDITION OF MATRIX";
}
else if(mat1 == 2)
{
    xyz = "DIFFERENCE BETWEEN MATRIX";
}
else if(mat1 == 3)
{
    xyz = "PRODUCT OF MATRIX";
}
else
{
    xyz = "------";
}
aa.setText("TOP:-"+xyz+"------BOTTOM:-TRACE OF 2*2 MATRIX");
}

        }//GEN-LAST:event_b4MouseClicked

        private void p4backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p4backMouseClicked

            p4.setVisible(false);
            p3back.setVisible(true);
}//GEN-LAST:event_p4backMouseClicked

        private void p4exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p4exitMouseClicked
mat2 = 0;
            if(mat1 == 1)
{
    xyz = "ADDITION OF MATRICES";
}
else if(mat1 == 2)
{
    xyz = "DIFFERENCE BETWEEN MATRICES";
}
else if(mat1 == 3)
{
    xyz = "PRODUCT OF MATRICES";
}
else
{
    xyz = "------";
}
aa.setText("TOP:-"+xyz+"BOTTOM:-------");
            aaa.setText("SELECT A FUNCTION");
            p4.setVisible(false);
            p3.setVisible(false);
            p3a1.setText("");
            p3a2.setText("");
            p3a3.setText("");
            p3b1.setText("");
            p3b2.setText("");
            p3b3.setText("");
            p3c1.setText("");
            p3c2.setText("");
            p3c3.setText("");
            p4ans.setText("");
}//GEN-LAST:event_p4exitMouseClicked

        private void b5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b5MouseClicked
  mat2 = 2 ;
            item = size.getSelectedIndex();
if(item == 0)
{
p3a1.setVisible(true);
p3a2.setVisible(true);
p3a3.setVisible(true);
p3b1.setVisible(true);
p3b2.setVisible(true);
p3b3.setVisible(true);
p3c1.setVisible(true);
p3c2.setVisible(true);
p3c3.setVisible(true);
p3.setVisible(true);
p4.setVisible(false);
p5.setVisible(false);
p3back.setVisible(true);
p4l1.setVisible(false);
p4l2.setVisible(true);
if(mat1 == 1)
{
    xyz = "ADDITION OF MATRICES";
}
else if(mat1 == 2)
{
    xyz = "DIFFERENCE BETWEEN MATRICES";
}
else if(mat1 == 3)
{
    xyz = "PRODUCT OF MATRICES";
}
else
{
    xyz = "------";
}
aa.setText("TOP:-"+xyz+"------BOTTOM:-DETERMINANT OF 3*3 MATRIX");

}
if(item == 1 || item == 2)
{
p3.setVisible(false);
p4.setVisible(false);
p5.setVisible(false);
p3back.setVisible(false);
if(mat1 == 1)
{
    xyz = "ADDITION OF MATRICES";
}
else if(mat1 == 2)
{
    xyz = "DIFFERENCE BETWEEN MATRICES";
}
else if(mat1 == 3)
{
    xyz = "PRODUCT OF MATRICES";
}
else
{
    xyz = "------";
}
aa.setText("TOP:-"+xyz+"------BOTTOM:-ERROR-DETERMINANT OF ONLY SQUARE MATRIX");

}
if ( item == 3)
{
    p3a1.setVisible(true);
    p3a2.setVisible(true);
    p3a3.setVisible(false);
    p3b1.setVisible(true);
    p3b2.setVisible(true);
    p3b3.setVisible(false);
    p3c1.setVisible(false);
    p3c2.setVisible(false);
    p3c3.setVisible(false);
    p3.setVisible(true);
p4.setVisible(false);
p3back.setVisible(true);
p5.setVisible(false);
p4l1.setVisible(false);
p4l2.setVisible(true);
if(mat1 == 1)
{
    xyz = "ADDITION OF MATRICES";
}
else if(mat1 == 2)
{
    xyz = "DIFFERENCE BETWEEN MATRICES";
}
else if(mat1 == 3)
{
    xyz = "PRODUCT OF MATRICES";
}
else
{
    xyz = "------";
}
aa.setText("TOP:-"+xyz+"------BOTTOM:-DETERMINANT OF 2*2 MATRIX");

}

        }//GEN-LAST:event_b5MouseClicked

        private void b6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b6MouseClicked
            mat2 = 3;
            if(mat1 == 1)
{
    xyz = "ADDITION OF MATRICES";
}
else if(mat1 == 2)
{
    xyz = "DIFFERENCE BETWEEN MATRICES";
}
else if(mat1 == 3)
{
    xyz = "PRODUCT OF MATRICES";
}
else
{
    xyz = "-------";
}
aa.setText("TOP:-"+xyz+"------BOTTOM:-TRANSPOSE OF MATRIX");
item = size.getSelectedIndex();
if(item == 0)
{
p3a1.setVisible(true);
p3a2.setVisible(true);
p3a3.setVisible(true);
p3b1.setVisible(true);
p3b2.setVisible(true);
p3b3.setVisible(true);
p3c1.setVisible(true);
p3c2.setVisible(true);
p3c3.setVisible(true);
p5a1.setVisible(true);
p5a2.setVisible(true);
p5a3.setVisible(true);
p5b1.setVisible(true);
p5b2.setVisible(true);
p5b3.setVisible(true);
p5c1.setVisible(true);
p5c2.setVisible(true);
p5c3.setVisible(true);
}
if(item == 1)
{
p3a1.setVisible(true);
p3a2.setVisible(true);
p3a3.setVisible(true);
p3b1.setVisible(true);
p3b2.setVisible(true);
p3b3.setVisible(true);
p3c1.setVisible(false);
p3c2.setVisible(false);
p3c3.setVisible(false);
p5a1.setVisible(true);
p5a2.setVisible(true);
p5a3.setVisible(false);
p5b1.setVisible(true);
p5b2.setVisible(true);
p5b3.setVisible(false);
p5c1.setVisible(true);
p5c2.setVisible(true);
p5c3.setVisible(false);
}
if(item == 2)
{
p5a1.setVisible(true);
p5a2.setVisible(true);
p5a3.setVisible(true);
p5b1.setVisible(true);
p5b2.setVisible(true);
p5b3.setVisible(true);
p5c1.setVisible(false);
p5c2.setVisible(false);
p5c3.setVisible(false);
p3a1.setVisible(true);
p3a2.setVisible(true);
p3a3.setVisible(false);
p3b1.setVisible(true);
p3b2.setVisible(true);
p3b3.setVisible(false);
p3c1.setVisible(true);
p3c2.setVisible(true);
p3c3.setVisible(false);
}
if(item == 3)
{
p3a1.setVisible(true);
p3a2.setVisible(true);
p3a3.setVisible(false);
p3b1.setVisible(true);
p3b2.setVisible(true);
p3b3.setVisible(false);
p3c1.setVisible(false);
p3c2.setVisible(false);
p3c3.setVisible(false);
p5a1.setVisible(true);
p5a2.setVisible(true);
p5a3.setVisible(false);
p5b1.setVisible(true);
p5b2.setVisible(true);
p5b3.setVisible(false);
p5c1.setVisible(false);
p5c2.setVisible(false);
p5c3.setVisible(false);
}
p3.setVisible(true);
p4.setVisible(false);
p5.setVisible(false);
p3back.setVisible(true);
        }//GEN-LAST:event_b6MouseClicked

        private void p5backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p5backMouseClicked
p5.setVisible(false);
p3back.setVisible(true);
}//GEN-LAST:event_p5backMouseClicked

        private void p5exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p5exitMouseClicked
mat2 = 0;
            if(mat1 == 1)
{
    xyz = "ADDITION OF MATRICES";
}
else if(mat1 == 2)
{
    xyz = "DIFFERENCE BETWEEN MATRICES";
}
else if(mat1 == 3)
{
    xyz = "PRODUCT OF MATRICES";
}
else
{
    xyz = "------";
}
aa.setText("TOP:-"+xyz+"BOTTOM:-------");
aaa.setText("SELECT A FUNCTION");
            p5.setVisible(false);
            p3.setVisible(false);
            p3a1.setText("");
            p3a2.setText("");
            p3a3.setText("");
            p3b1.setText("");
            p3b2.setText("");
            p3b3.setText("");
            p3c1.setText("");
            p3c2.setText("");
            p3c3.setText("");
            p5a1.setText("");
            p5a2.setText("");
            p5a3.setText("");
            p5b1.setText("");
            p5b2.setText("");
            p5b3.setText("");
            p5c1.setText("");
            p5c2.setText("");
            p5c3.setText("");
}//GEN-LAST:event_p5exitMouseClicked

        private void p5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p5MouseClicked

        }//GEN-LAST:event_p5MouseClicked

        private void b1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_b1KeyPressed
            // TODO add your handling code here:
        }//GEN-LAST:event_b1KeyPressed

        private void b3MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b3MouseMoved
aaa.setText("PRODUCT OF MATRICES ");            // TODO add your handling code here:
        }//GEN-LAST:event_b3MouseMoved

        private void sizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sizeMouseClicked
p1.setVisible(false);            // TODO add your handling code here:
p2.setVisible(false);
p3.setVisible(false);
p4.setVisible(false);
p5.setVisible(false);
sign.setVisible(false);
p1a1.setVisible(true);
p1a2.setVisible(true);
p1a3.setVisible(true);
p1b1.setVisible(true);
p1b2.setVisible(true);
p1b3.setVisible(true);
p1c1.setVisible(true);
p1c2.setVisible(true);
p1c3.setVisible(true);
p1a11.setVisible(true);
p1a22.setVisible(true);
p1a33.setVisible(true);
p1b11.setVisible(true);
p1b22.setVisible(true);
p1b33.setVisible(true);
p1c11.setVisible(true);
p1c22.setVisible(true);
p1c33.setVisible(true);
p2a1.setVisible(true);
p2a2.setVisible(true);
p2a3.setVisible(true);
p2b1.setVisible(true);
p2b2.setVisible(true);
p2b3.setVisible(true);
p2c1.setVisible(true);
p2c2.setVisible(true);
p2c3.setVisible(true);
p3a1.setVisible(true);
p3a2.setVisible(true);
p3a3.setVisible(true);
p3b1.setVisible(true);
p3b2.setVisible(true);
p3b3.setVisible(true);
p3c1.setVisible(true);
p3c2.setVisible(true);
p3c3.setVisible(true);
p5a1.setVisible(true);
p5a2.setVisible(true);
p5a3.setVisible(true);
p5b1.setVisible(true);
p5b2.setVisible(true);
p5b3.setVisible(true);
p5c1.setVisible(true);
p5c2.setVisible(true);
p5c3.setVisible(true);
p1a1.setText("");
p1a2.setText("");
p1a3.setText("");
p1b1.setText("");
p1b2.setText("");
p1b3.setText("");
p1c1.setText("");
p1c2.setText("");
p1c3.setText("");
p1a11.setText("");
p1a22.setText("");
p1a33.setText("");
p1b11.setText("");
p1b22.setText("");
p1b33.setText("");
p1c11.setText("");
p1c22.setText("");
p1c33.setText("");
p2a1.setText("");
p2a2.setText("");
p2a3.setText("");
p2b1.setText("");
p2b2.setText("");
p2b3.setText("");
p2c1.setText("");
p2c2.setText("");
p2c3.setText("");
p3a1.setText("");
p3a2.setText("");
p3a3.setText("");
p3b1.setText("");
p3b2.setText("");
p3b3.setText("");
p3c1.setText("");
p3c2.setText("");
p3c3.setText("");
p5a1.setText("");
p5a2.setText("");
p5a3.setText("");
p5b1.setText("");
p5b2.setText("");
p5b3.setText("");
p5c1.setText("");
p5c2.setText("");
p5c3.setText("");

        }//GEN-LAST:event_sizeMouseClicked

        private void b1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b1MouseMoved
aaa.setText("SUM OF MATRICES");            // TODO add your handling code here:
        }//GEN-LAST:event_b1MouseMoved

        private void b2MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b2MouseMoved
aaa.setText("DIFFERENCE BETWEEN MATRICES");            // TODO add your handling code here:
        }//GEN-LAST:event_b2MouseMoved

        private void sizeMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sizeMouseMoved
aaa.setText("SIZE OF MATRIX");            // TODO add your handling code here:
        }//GEN-LAST:event_sizeMouseMoved

        private void b4MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b4MouseMoved
aaa.setText("TRACE OF MATRIX");            // TODO add your handling code here:
        }//GEN-LAST:event_b4MouseMoved

        private void b6MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b6MouseMoved
aaa.setText("TRANSPOSE OF MATRIX");            // TODO add your handling code here:
        }//GEN-LAST:event_b6MouseMoved

        private void b5MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b5MouseMoved
aaa.setText("DETERMINANT OF MATRIX");            // TODO add your handling code here:
        }//GEN-LAST:event_b5MouseMoved

        private void b5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_b5FocusLost
//aaa.setText("SELECT A FUNCTION");            // TODO add your handling code here:
        }//GEN-LAST:event_b5FocusLost

        private void inverseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inverseMouseClicked
            this.item = 4;            //....... INDICATES THAT ITS INVERSE OPERATIONS
            int mat_size = size.getSelectedIndex();
            if(mat_size == 1 || mat_size == 2){
                System.out.println("I am going back");
                return;
            }
            p3.setVisible(true);
            p3a1.setVisible(true);
            p3a2.setVisible(true);
            p3a3.setVisible(true);
            p3b1.setVisible(true);
            p3b2.setVisible(true);
            p3b3.setVisible(true);
            p3c1.setVisible(true);
            p3c2.setVisible(true);
            p3c3.setVisible(true);

            if(mat_size == 0){
                mat_size = 3;
            }
            else if(mat_size == 3){
                p3a3.setVisible(false);
                p3b3.setVisible(false);
                p3c1.setVisible(false);
                p3c2.setVisible(false);
                p3c3.setVisible(false);
                mat_size = 2;
                System.out.println("I finally reached here....");
            }
            
        }//GEN-LAST:event_inverseMouseClicked

 /*
  private void b1MouseMoved(java.awt.event.MouseEvent evt) {
aaa.setText("ADDITION OF MATRICES ");            // TODO add your handling code here:
        }
            private void b2MouseMoved(java.awt.event.MouseEvent evt) {
aaa.setText("DIFFERENCE OF MATRICES ");            // TODO add your handling code here:
        }
              private void b4MouseMoved(java.awt.event.MouseEvent evt) {
aaa.setText("TRACE OF MATRIX ");            // TODO add your handling code here:
        }
                   private void b5MouseMoved(java.awt.event.MouseEvent evt) {
aaa.setText("DETERMINANT OF MATRIX ");            // TODO add your handling code here:
        }
                        private void b6MouseMoved(java.awt.event.MouseEvent evt) {
aaa.setText("TRANSPOSE OF MATRIX ");            // TODO add your handling code here:
        }
  */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel aa;
    private javax.swing.JLabel aaa;
    private javax.swing.JButton b1;
    private javax.swing.JButton b2;
    private javax.swing.JButton b3;
    private javax.swing.JButton b4;
    private javax.swing.JButton b5;
    private javax.swing.JButton b6;
    private javax.swing.JButton inverse;
    private javax.swing.JLabel l1;
    private javax.swing.JLabel l2;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JPanel p1;
    private javax.swing.JTextField p1a1;
    private javax.swing.JTextField p1a11;
    private javax.swing.JTextField p1a2;
    private javax.swing.JTextField p1a22;
    private javax.swing.JTextField p1a3;
    private javax.swing.JTextField p1a33;
    private javax.swing.JTextField p1b1;
    private javax.swing.JTextField p1b11;
    private javax.swing.JTextField p1b2;
    private javax.swing.JTextField p1b22;
    private javax.swing.JTextField p1b3;
    private javax.swing.JTextField p1b33;
    private javax.swing.JButton p1back;
    private javax.swing.JTextField p1c1;
    private javax.swing.JTextField p1c11;
    private javax.swing.JTextField p1c2;
    private javax.swing.JTextField p1c22;
    private javax.swing.JTextField p1c3;
    private javax.swing.JTextField p1c33;
    private javax.swing.JButton p1done;
    private javax.swing.JLabel p1l;
    private javax.swing.JLabel p1l1;
    private javax.swing.JLabel p1l2;
    private javax.swing.JButton p1reset;
    private javax.swing.JLabel p1sign;
    private javax.swing.JPanel p2;
    private javax.swing.JLabel p2a1;
    private javax.swing.JLabel p2a2;
    private javax.swing.JLabel p2a3;
    private javax.swing.JLabel p2b1;
    private javax.swing.JLabel p2b2;
    private javax.swing.JLabel p2b3;
    private javax.swing.JButton p2back;
    private javax.swing.JLabel p2c1;
    private javax.swing.JLabel p2c2;
    private javax.swing.JLabel p2c3;
    private javax.swing.JButton p2exit;
    private javax.swing.JLabel p2l1;
    private javax.swing.JPanel p3;
    private javax.swing.JTextField p3a1;
    private javax.swing.JTextField p3a2;
    private javax.swing.JTextField p3a3;
    private javax.swing.JTextField p3b1;
    private javax.swing.JTextField p3b2;
    private javax.swing.JTextField p3b3;
    private javax.swing.JButton p3back;
    private javax.swing.JTextField p3c1;
    private javax.swing.JTextField p3c2;
    private javax.swing.JTextField p3c3;
    private javax.swing.JButton p3done;
    private javax.swing.JLabel p3l1;
    private javax.swing.JButton p3reset;
    private javax.swing.JPanel p4;
    private javax.swing.JLabel p4ans;
    private javax.swing.JButton p4back;
    private javax.swing.JButton p4exit;
    private javax.swing.JLabel p4l1;
    private javax.swing.JLabel p4l2;
    private javax.swing.JPanel p5;
    private javax.swing.JLabel p5a1;
    private javax.swing.JLabel p5a2;
    private javax.swing.JLabel p5a3;
    private javax.swing.JLabel p5b1;
    private javax.swing.JLabel p5b2;
    private javax.swing.JLabel p5b3;
    private javax.swing.JButton p5back;
    private javax.swing.JLabel p5c1;
    private javax.swing.JLabel p5c2;
    private javax.swing.JLabel p5c3;
    private javax.swing.JButton p5exit;
    private javax.swing.JLabel p5l1;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JLabel sign;
    private javax.swing.JComboBox size;
    private javax.swing.JLabel statusAnimationLabel;
    private javax.swing.JLabel statusMessageLabel;
    private javax.swing.JPanel statusPanel;
    // End of variables declaration//GEN-END:variables

    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;

    private JDialog aboutBox;
}
